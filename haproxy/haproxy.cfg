global
    maxconn 32000
    tune.ssl.default-dh-param 2048
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA
    ssl-default-bind-options no-sslv3 no-tls-tickets
    ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA
    ssl-default-server-options no-sslv3 no-tls-tickets

defaults
    maxconn 30000
    mode    http
    option  forwardfor
    default-server  check  inter 2s  fall 3  resolvers docker  resolve-prefer ipv4  init-addr last,libc,none
    timeout connect 10s
    timeout client  70s
    timeout server  70s
    # websocket (what about ws keepalives?)
    timeout tunnel  10m
    timeout client-fin 30s
    # aggressive timeouts
    timeout http-request 15s
    timeout queue   30s

    log stdout  format raw  local0
    log-format %ci:%cp\ [%t]\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ \ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r\ bu=%U\ th=%Th
    option  log-separate-errors

    # stats at http://localhost/haproxy
    # without authentication
    #stats   auth haproxy:haproxy
    stats   enable
    stats   uri /haproxy

    # compression
    #compression algo gzip
    #compression type text/html text/html;charset=utf-8 text/plain text/css text/javascript application/x-javascript application/javascript application/xml application/json

resolvers docker
    nameserver docker-native 127.0.0.11:53
    resolve_retries 3
    timeout retry 1s
    hold valid 60s
    hold other 30s
    hold refused 30s
    hold nx 30s
    hold timeout 30s



frontend front
    bind *:80
    bind *:443 ssl crt /usr/local/etc/haproxy/cert/haproxy.pem 

    # logging
    log-format %ci:%cp\ [%t]\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ \ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r\ bu=%U\ th=%Th

    # redirect HTTP -> HTTPS
    #http-request   redirect    scheme https    if !{ ssl_fc }

    #http-request        set-header  X-Forwarded-Proto  "http"      if !{ ssl_fc }
    #http-request        set-header  X-Forwarded-Proto  "https"     if ssl_fc
    #http-response  set-header  Strict-Transport-Security  "max-age=31536000; includeSubDomains"
    #http-response  set-header  X-Robots-Tag  "noindex"
    #http-response  del-header  Server
    #http-response  del-header  X-Powered-By

    # url structure
    #acl                 context_websocket   path_beg    /ws/
    #acl                 context_root        path        /

    # Observer
    default_backend    observer

    # Alpha Centauri
    use_backend        alpha-centauri           if { path_beg  /alpha-centauri }

# backend multi-node-example
#     # hash approach
#     #balance hdr(BGW_BUID)
#     #hash-type consistent

#     # sticky table approach
#     balance roundrobin
#     stick on req.hdr(BGW_BUID)
#     stick-table type integer size 1000000 expire 21d

#     #option httpchk HEAD /status
#     server  bgw1    bgw1:80      maxconn 10000
#     server  bgw2    bgw2:80      maxconn 10000
#     server  bgw3    bgw3:80      maxconn 10000

backend alpha-centauri
    http-request set-uri %[url,regsub(^/alpha-centauri,,)]
    server alpha-centauri alpha-centauri:8080

backend observer
    server observer observer:8080
